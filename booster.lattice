//
// booster.lattice: basic lattice of AGS Booster
//
// MAD file as developed by M.Tanaka and A.Luccio for
// Slow Extracted Beam from the Booster.
//   8/19/97 - Model picked up by K.Brown
//	     Basic parameters:
//		Extraction Septum Magnet located at D6
//		Electrostatic Septum Magnet located at B6
//		Sextupole Configurations to consider -
//		      For SEB at 14/3 = 4 2/3
//			1. C8/F8 both +
//			2. C8/F8 both +, E4/B4 both -
//		      For SEB at 13/3 = 4 1/3
//			3. C8 +, F8 -
//
//  Mon Oct 22 12:33:51 EDT 2001 - update, K.A. Brown
//    no longer any electrostatic septum.
//    Booster Beam Dump is at B6
//    B-dot effect in quadrupoles now included, using BDOT variable
//    Thin septum magnet located at D3
//    orbit bumps, using error field can be found in BOOSTER.BMP
//
// "AGS BOOSTER - Basic (for SEB tracking 12-92 by st & aul)"
//
// MODIFICATIONS APRIL 1992 BY MMB FOR NONLINEAR EFFECTS
//------------------------------------------------------------------- 
// MODIFICATIONS oct 1992 BY AUL FOR NONLINEAR EFFECTS 
//------------------------------------------------------------------- 
// MODIFICATIONS oct 2001 BY KAB FOR HIGH PRECISION TUNE PREDICTIONS
//------------------------------------------------------------------- 
// VERSION created for CERN Mad8 -- 7/17/04 KAB
//===================================================================
// 
// Expected Variables:
//   1.  IDIPO               = for main dipole current
//   2.  BRHO                = used in tune and chromaticity calculations
//   3.  IQHC & IQVC         = tune trim power supplies
//   4.  ISH & ISV           = chrom. sextupoles
//   5.  ISEBC8F8 & ISEBB4E4 = drive sextupoles for 13/3 resonance
//   6.  D03kick             = D3 thin septum
//   7.  IC7, ID1,ID2, ID4, ID6, ID7, IE1  = for D3/D6 orbit bump
//            call file = BOOSTER.BMP to use these
//   8.  BDOT
//
// Lines which can be used:
//  BOOSTER
//  B_D3 
//  D3toD6
// 
// 10/01 - KAB
//===================================================================
//
//Drift parameters
//
L007:   DRIFT, L:=0.069600;
// L011:   DRIFT, L:=0.111825;  // these are now defined based on EffL of quads
// L012:   DRIFT, L:=0.117325;  // see quadrupoles section below
L014:   DRIFT, L:=0.138050;
L019:   DRIFT, L:=0.186080;
L0218:  DRIFT, L:=0.217555;  //7/26/91 for new position of SPTMC3
L028:   DRIFT, L:=0.276675;
L02835: DRIFT, L:=0.2835;
L02869: DRIFT, L:=0.2869;
// L029:   DRIFT, L:=0.289875;  // these are now defined based on EffL of quads
// L031:   DRIFT, L:=0.295375;  // see quadrupoles section below
L030:   DRIFT, L:=0.293725;
L032:   DRIFT, L:=0.305784;
L03025: DRIFT, L:=0.3025;
L057:   DRIFT, L:=0.570400;
L0605:  DRIFT, L:=0.60500;
L222:   DRIFT, L:=2.218011;
L271:   DRIFT, L:=2.715375;
L2757:  DRIFT, L:=2.756936;   //7/26/91 for new position of SPTMC3
L328:   DRIFT, L:=3.280275;
//
// Dipole parameters
//
LDH:  DRIFT, L:=LEND;
LDHH: DRIFT, L:=LEND/2;
// ionization profile monitors
LDH1: DRIFT, L:=1.5;
LDH2: DRIFT, L:=0.32;
LDH3: DRIFT, L:=0.32;
LDH4: DRIFT, L:=LEND - 1.5 - 0.32 - 0.32; // TOTAL LENGTH L= LEND
IPMV:  MARKER;  // VERTICAL IPM
IPMSK: MARKER;  // SKEW FIELD CORRECTOR
IPMH:  MARKER;  // HORIZONTAL IPM
// new D3 kicker straight section 
LD31: DRIFT, L:=0.32;
LD32: DRIFT, L:=0.32;
LD33: DRIFT, L:=1.5;
LD34: DRIFT, L:=0.28;
//
// Bend
//
DHA1T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA1Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA2T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA2Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA4T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA4Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA5T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA5Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA7T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA7Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA8T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHA8Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
//
DHB1T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB1Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB2T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB2Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB4T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB4Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB5T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB5Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB7T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB7Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB8T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHB8Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
//
// a study of a broken vacuum chamber coil - Booster History 1992
C7BMPED:=1.0;
C7ANGD:=ANGD*C7BMPED;
DHC1T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC1Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC2T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC2Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC4T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC4Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC5T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC5Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC7T: SBEND, L:=LEND/2,  ANGLE:=C7ANGD/2, K1:=K10, K2:=K20;
DHC7Z: SBEND, L:=LEND/2,  ANGLE:=C7ANGD/2, K1:=K10, K2:=K20;
DHC8T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHC8Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
//
DHD1T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD1Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD2T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD2Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD4T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD4Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD5T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD5Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD7T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD7Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD8T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHD8Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
//
DHE1T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE1Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE2T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE2Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE4T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE4Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE5T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE5Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE7T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE7Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE8T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHE8Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
//
DHF1T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF1Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF2T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF2Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF4T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF4Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF5T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF5Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF7T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF7Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF8T: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
DHF8Z: SBEND, L:=LEND/2,  ANGLE:=ANGD/2, K1:=K10, K2:=K20;
//
// Quadrupoles
//
//
L011:   DRIFT, L:=0.111825+LVUS;
L012:   DRIFT, L:=0.117325+LHUS;
L029:   DRIFT, L:=0.289875+LVDS;
L031:   DRIFT, L:=0.295375+LHDS;
//-------------------------------------------------------- 
//QVC1: QUAD, L:=LENQV, K1:=CKV;
//QHC2: QUAD, L:=LENQH, K1:=CKH;
//QVC3: QUAD, L:=LENQV, K1:=CKV;
//QHC4: QUAD, L:=LENQH, K1:=CKH;
//QVC5: QUAD, L:=LENQV, K1:=CKV;
//QHC6: QUAD, L:=LENQH, K1:=CKH;
//QVC7: QUAD, L:=LENQV, K1:=CKV;
//QHC8: QUAD, L:=LENQH, K1:=CKH;
//
//QVD1: QUAD, L:=LENQV, K1:=CKV;
//QHD2: QUAD, L:=LENQH, K1:=CKH;
//QVD3: QUAD, L:=LENQV, K1:=CKV;
//QHD4: QUAD, L:=LENQH, K1:=CKH;
//QVD5: QUAD, L:=LENQV, K1:=CKVear ;
//QHD6: QUAD, L:=LENQH, K1:=CKH;
//QVD7: QUAD, L:=LENQV, K1:=CKV ;
//QHD8: QUAD, L:=LENQH, K1:=CKH;
//
//QVE1: QUAD, L:=LENQV, K1:=CKV ;
//QHE2: QUAD, L:=LENQH, K1:=CKH;
//QVE3: QUAD, L:=LENQV, K1:=CKV ;
//QHE4: QUAD, L:=LENQH, K1:=CKH;
//QVE5: QUAD, L:=LENQV, K1:=CKV ;
//QHE6: QUAD, L:=LENQH, K1:=CKH;
//QVE7: QUAD, L:=LENQV, K1:=CKV ;
//QHE8: QUAD, L:=LENQH, K1:=CKH;
//
//QVF1: QUAD, L:=LENQV, K1:=CKV ;
//QHF2: QUAD, L:=LENQH, K1:=CKH;
//QVF3: QUAD, L:=LENQV, K1:=CKV ;
//QHF4: QUAD, L:=LENQH, K1:=CKH;
//QVF5: QUAD, L:=LENQV, K1:=CKVear ;
//QHF6: QUAD, L:=LENQH, K1:=CKH;
//QVF7: QUAD, L:=LENQV, K1:=CKV ;
//QHF8: QUAD, L:=LENQH, K1:=CKH;
//
//QVA1: QUAD, L:=LENQV, K1:=CKV ;
//QHA2: QUAD, L:=LENQH, K1:=CKH;
//QVA3: QUAD, L:=LENQV, K1:=CKV ;
//QHA4: QUAD, L:=LENQH, K1:=CKH;
//QVA5: QUAD, L:=LENQV, K1:=CKV ;
//QHA6: QUAD, L:=LENQH, K1:=CKH;
//QVA7: QUAD, L:=LENQV, K1:=CKV ;
//QHA8: QUAD, L:=LENQH, K1:=CKH;
//
//QVB1: QUAD, L:=LENQV, K1:=CKV ;
//QHB2: QUAD, L:=LENQH, K1:=CKH;
//QVB3: QUAD, L:=LENQV, K1:=CKV ;
//QHB4: QUAD, L:=LENQH, K1:=CKH;
//QVB5: QUAD, L:=LENQV, K1:=CKV;
//QHB6: QUAD, L:=LENQH, K1:=CKH;
//QVB7: QUAD, L:=LENQV, K1:=CKV;
//QHB8: QUAD, L:=LENQH, K1:=CKH;

QVC1: QUADRUPOLE, L:=LENQV, K1:=CKVTC1; 
QHC2: QUADRUPOLE, L:=LENQH, K1:=CKHTC2 ;
QVC3: QUADRUPOLE, L:=LENQV, K1:=CKVTC3;
QHC4: QUADRUPOLE, L:=LENQH, K1:=CKHTC4;
QVC5: QUADRUPOLE, L:=LENQV, K1:=CKVTC5;
QHC6: QUADRUPOLE, L:=LENQH, K1:=CKHTC6;
QVC7: QUADRUPOLE, L:=LENQV, K1:=CKVTC7 ;
QHC8: QUADRUPOLE, L:=LENQH, K1:=CKHTC8 ;
//
QVD1: QUADRUPOLE, L:=LENQV, K1:=CKVTD1 ;
QHD2: QUADRUPOLE, L:=LENQH, K1:=CKHTD2 ;
QVD3: QUADRUPOLE, L:=LENQV, K1:=CKVTD3 ;
QHD4: QUADRUPOLE, L:=LENQH, K1:=CKHTD4;
QVD5: QUADRUPOLE, L:=LENQV, K1:=CKVTD5 ;  // ear chamber
QHD6: QUADRUPOLE, L:=LENQH, K1:=CKHTD6;
QVD7: QUADRUPOLE, L:=LENQV, K1:=CKVTD7;
QHD8: QUADRUPOLE, L:=LENQH, K1:=CKHTD8;
//
QVE1: QUADRUPOLE, L:=LENQV, K1:=CKVTE1 ;
QHE2: QUADRUPOLE, L:=LENQH, K1:=CKHTE2 ;
QVE3: QUADRUPOLE, L:=LENQV, K1:=CKVTE3  ;
QHE4: QUADRUPOLE, L:=LENQH, K1:=CKHTE4 ;
QVE5: QUADRUPOLE, L:=LENQV, K1:=CKVTE5  ;
QHE6: QUADRUPOLE, L:=LENQH, K1:=CKHTE6 ;
QVE7: QUADRUPOLE, L:=LENQV, K1:=CKVTE7  ;
QHE8: QUADRUPOLE, L:=LENQH, K1:=CKHTE8 ;
//
QVF1: QUADRUPOLE, L:=LENQV, K1:=CKVTF1;
QHF2: QUADRUPOLE, L:=LENQH, K1:=CKHTF2;
QVF3: QUADRUPOLE, L:=LENQV, K1:=CKVTF3;
QHF4: QUADRUPOLE, L:=LENQH, K1:=CKHTF4;
QVF5: QUADRUPOLE, L:=LENQV, K1:=CKVTF5 ;  // ear chamber
QHF6: QUADRUPOLE, L:=LENQH, K1:=CKHTF6;
QVF7: QUADRUPOLE, L:=LENQV, K1:=CKVTF7 ;
QHF8: QUADRUPOLE, L:=LENQH, K1:=CKHTF8;
//
QVA1: QUADRUPOLE, L:=LENQV, K1:=CKVTA1 ;
QHA2: QUADRUPOLE, L:=LENQH, K1:=CKHTA2 ;
QVA3: QUADRUPOLE, L:=LENQV, K1:=CKVTA3 ;
QHA4: QUADRUPOLE, L:=LENQH, K1:=CKHTA4 ;
QVA5: QUADRUPOLE, L:=LENQV, K1:=CKVTA5  ;
QHA6: QUADRUPOLE, L:=LENQH, K1:=CKHTA6 ;
QVA7: QUADRUPOLE, L:=LENQV, K1:=CKVTA7  ;
QHA8: QUADRUPOLE, L:=LENQH, K1:=CKHTA8 ;
//
QVB1: QUADRUPOLE, L:=LENQV, K1:=CKVTB1  ;
QHB2: QUADRUPOLE, L:=LENQH, K1:=CKHTB2  ;
QVB3: QUADRUPOLE, L:=LENQV, K1:=CKVTB3  ;
QHB4: QUADRUPOLE, L:=LENQH, K1:=CKHTB4  ;
QVB5: QUADRUPOLE, L:=LENQV, K1:=CKVTB5;
QHB6: QUADRUPOLE, L:=LENQH, K1:=CKHTB6;
QVB7: QUADRUPOLE, L:=LENQV, K1:=CKVTB7;
QHB8: QUADRUPOLE, L:=LENQH, K1:=CKHTB8;
// 
// Sextupoles
//
SVC1: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHC2: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVC3: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHC4: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVC5: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHC6: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVC7: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
//SHC8: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SHC8: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBC8F8);            //  for 13/3
//SHC8: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBC8F8);          //  for 14/3))
//SHC8: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBC8F8);          //  for 14/3))
SVD1: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHD2: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVD3: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHD4: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVD5: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHD6: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVD7: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHD8: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
// 
SVE1: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHE2: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVE3: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
//SHE4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBB4E4);  //  for 13/3
SHE4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBB4E4);    //  for 13/3
//SHE4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBB4E4);  //  for 14/3
//SHE4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBB4E4);  //  for 14/3
SVE5: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHE6: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVE7: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHE8: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
// 
SVF1: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHF2: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVF3: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHF4: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVF5: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHF6: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVF7: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
//SHF8: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SHF8: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBC8F8);   // for 13/3 extraction
//SHF8: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBC8F8); // for 14/3 extraction
//SHF8: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBC8F8); // for 14/3 extraction
//
SVA1: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHA2: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVA3: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHA4: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVA5: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHA6: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVA7: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHA8: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
// 
SVB1: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHB2: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVB3: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
//SHB4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBB4E4); // for 13/3 extraction
SHB4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBB4E4)  ; // for 13/3 extraction
//SHB4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH-ISEBB4E4); // for 14/3 extraction
//SHB4: SEXTUPOLE, L:=LENS, K2:=K2SH*(ISH+ISEBB4E4); // for 14/3 extraction
SVB5: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHB6: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
SVB7: SEXTUPOLE, L:=LENS, K2:=K2SV*ISV;
SHB8: SEXTUPOLE, L:=LENS, K2:=K2SH*ISH;
//
// Slow correctors
//   kab, 8/31/07
// Calib. of correctors from BoosterTN 224, R.Thern
//  Bdl/A = 9.75e-5 Tm/A
//  so a kick (in radians) is (1/Brho)*(Bdl/A)*amps
// 
DHCC2: HKICKER, KICK= T3_DHCC2 + DHCC2k;
DHCC4: HKICKER, KICK= T3_DHCC4 + DHCC4k;
DHCC6: HKICKER, KICK= T3_DHCC6 + DHCC6k;
DHCC8: HKICKER, KICK= T3_DHCC8 + DHCC8k;
DHCD2: HKICKER, KICK=0.0 + DHCD2k;
DHCD4: HKICKER, KICK=0.0 + DHCD4k;
//
//HKICKER, DHD4TK, KICK=T25_DHD4*ANGD;
//
DHCD6: HKICKER, KICK=0.0 + DHCD6k;      //missing
DHCD8: HKICKER, KICK=0.0 + DHCD8k;
//
//HKICKER, DHD8TK, KICK=T25_DHD8*ANGD;
//HKICKER, DHE1TK, KICK=T25_DHE1*ANGD;
//
DHCE2: HKICKER, KICK=00 + DHCE2k;
DHCE4: HKICKER, KICK=00 + DHCE4k;
DHCE6: HKICKER, KICK=00 + DHCE6k;
DHCE8: HKICKER, KICK=00 + DHCE8k;
DHCF2: HKICKER, KICK=00 + DHCF2k;
DHCF4: HKICKER, KICK=00 + DHCF4k;
DHCF6: HKICKER, KICK=00 + DHCF6k ;     //missing
DHCF8: HKICKER, KICK=00 + DHCF8k;
DHCA2: HKICKER, KICK= T5_DHCA2 + DHCA2k;
DHCA4: HKICKER, KICK= T5_DHCA4 + DHCA4k;
DHCA6: HKICKER, KICK= T5_DHCA6 + DHCA6k;
DHCA8: HKICKER, KICK=00 + DHCA8k;
DHCB2: HKICKER, KICK=00 + DHCB2k;
DHCB4: HKICKER, KICK=00 + DHCB4k;
DHCB6: HKICKER, KICK=00 + DHCB6k;
DHCB8: HKICKER, KICK=00 + DHCB8k;
//
DVCC1: VKICKER, KICK=00 + DVCC1k;
DVCC3: VKICKER, KICK= T6_DVCC3 + DVCC3k;
DVCC5: VKICKER, KICK= T6_DVCC5 + DVCC5k;
DVCC7: VKICKER, KICK= T6_DVCC7 + DVCC7k;
DVCD1: VKICKER, KICK= T6_DVCD1 + DVCD1k;
DVCD3: VKICKER, KICK=00 + DVCD3k;
DVCD5: VKICKER, KICK=00 + DVCD5k;
DVCD7: VKICKER, KICK=00 + DVCD7k;
DVCE1: VKICKER, KICK=00 + DVCE1k;
DVCE3: VKICKER, KICK=00 + DVCE3k;
DVCE5: VKICKER, KICK=00 + DVCE5k;
DVCE7: VKICKER, KICK=00 + DVCE7k;
DVCF1: VKICKER, KICK=00 + DVCF1k;
DVCF3: VKICKER, KICK=                     T20_VCF3 + DVCF3k;
DVCF5: VKICKER, KICK=           T19_VCF5 +T20_VCF5 + DVCF5k;
DVCF7: VKICKER, KICK=           T19_VCF7 +T20_VCF7 + DVCF7k;
DVCA1: VKICKER, KICK= T4_DVCA1 +T19_VCA1 +T20_VCA1 + DVCA1k;
DVCA3: VKICKER, KICK= T4_DVCA3                     + DVCA3k;
DVCA5: VKICKER, KICK= T4_DVCA5 +T14_VCA5 + DVCA5k;
DVCA7: VKICKER, KICK=           T14_VCA7 + DVCA7k;
DVCB1: VKICKER, KICK=           T14_VCB1 + DVCB1k;
DVCB3: VKICKER, KICK=00 + DVCB3k;
DVCB5: VKICKER, KICK=00 + DVCB5k;
DVCB7: VKICKER, KICK=00 + DVCB7k;
//
// Beam position monitors
//
PUEVC1: MONITOR;
PUEHC2: MONITOR;
PUEVC3: MONITOR;
PUEHC4: MONITOR;
PUEVC5: MONITOR;
PUEHC6: MONITOR;
PUEVC7: MONITOR;
PUEHC8: MONITOR;
//
PUEVD1: MONITOR;
PUEHD2: MONITOR;
PUEVD3: MONITOR;
PUEHD4: MONITOR;
PUEVD5: MONITOR;
PUEHD6: MONITOR ;      //missing
PUEVD7: MONITOR;
PUEHD8: MONITOR;
//
PUEVE1: MONITOR;
PUEHE2: MONITOR;
PUEVE3: MONITOR;
PUEHE4: MONITOR;
PUEVE5: MONITOR;
PUEHE6: MONITOR;
PUEVE7: MONITOR;
PUEHE8: MONITOR;
//
PUEVF1: MONITOR;
PUEHF2: MONITOR;
PUEVF3: MONITOR;
PUEHF4: MONITOR;
PUEVF5: MONITOR;
PUEHF6: MONITOR ;       //missing
PUEVF7: MONITOR;
PUEHF8: MONITOR;
//
PUEVA1: MONITOR;
PUEHA2: MONITOR;
PUEVA3: MONITOR;
PUEHA4: MONITOR;
PUEVA5: MONITOR;
PUEHA6: MONITOR;
PUEVA7: MONITOR;
PUEHA8: MONITOR;
//
PUEVB1: MONITOR;
PUEHB2: MONITOR;
PUEVB3: MONITOR;
PUEHB4: MONITOR;
PUEVB5: MONITOR;
PUEHB6: MONITOR;
PUEVB7: MONITOR;
PUEHB8: MONITOR;
//
MONH: MARKER;
MONV: MARKER;
//
CAVITY: RFCAVITY, VOLT=0.00, HARMON=3;
//
IJFOIL: MARKER;     // Proton Injection Foil
SPTMC3: MARKER;     // Heavy Ion Injection Septum
//
// Proton Injection Fast Kickers
// Heavy Ion Injection Fast Kickers 
//

IJKDHC1: HKICKER, KICK=          T7_KHC1 +T16_KHC1;
IJKDHC3: HKICKER, KICK= T2_KHC3 +T7_KHC3 +T16_KHC3;
IJKDHC7: HKICKER, KICK= T2_KHC7 +T7_KHC7 +T16_KHC7;
IJKDHD1: HKICKER, KICK= T2_KHD1 +T7_KHD1 +T16_KHD1;
//
//HKICKER, IJKDHC3, KICK= 0.716/161.29;    //1/17/92 to match experiment
//HKICKER, IJKDHD1, KICK= 0.380/161.29;    //1/17/92 to match experiment
//
// Extraction Kickers
//
//D03kick:=0.0;

X1DHF3: HKICKER, KICK= 0.0;
X2DHF3: HKICKER, KICK= 0.0;
X3DHF3: HKICKER, KICK= 0.0;
X4DHF3: HKICKER, KICK= 0.0;
SPTMD3k: HKICKER, KICK=D03kick;
// the D6 septum
D6SEPTu: SBEND, L:=2.30/2,  ANGLE:=ANGD6/2;
D6SEPTd: SBEND, L:=2.30/2,  ANGLE:=ANGD6/2;
//
SPTMF6: MARKER;     // Extraction Septum
SPTMB6: MARKER;     // SEB Septum
//SPTMD6: MARKER;     // SEB Septum
//D6ds: MARKER;     // SEB Septum
SPTMD3: MARKER;      // SEB Septum
//
SPTMD6: RCOLLIMATOR, L:=0., XSIZE=0.009, YSIZE=1.;
D6ds:   RCOLLIMATOR, L:=0., XSIZE=0.009, YSIZE=1.;
//
//ELSEP:  ELSEPARATOR, L:=0.0, E=0.0  ;
//                              
//
// collimator for SEB (AUL & ST 12/23/92)
//
//COLLB6, RCOLLIMATOR, L:=0., XSIZE=0.12, YSIZE=1;
//COLLB6, RCOLLIMATOR, L:=0., XSIZE=0.005., YSIZE=1.;
COLLB6: MARKER;
//
// Special Sections
//
LJC1: LINE = (L028, IJKDHC1, L030);
//LJC3: LINE = (L032, IJKDHC3, L222, SPTMC3, L019);     //Heavy Ion Injection
LJC3: LINE = (L032, IJKDHC3, L2757, SPTMC3, L0218);     //7/26/91 Heavy Ion Injection
LJC7: LINE = (L028, IJKDHC7, L030);
LJD1: LINE = (L028, IJKDHD1, L030);
LIJF: LINE = (L02835, IJFOIL, L02869);                //Proton Injection
RFA3: LINE = (LDHH, CAVITY, LDHH);                    //Proton cavity
//
//Extraction fast kicker
// 
S0:= 0.130;   // distance along missing dipole to upstream edge of 1st kicker
LEK1: DRIFT, L:=S0+0.2731;
LEK2: DRIFT, L:=0.6096;
LEK3: DRIFT, L:=0.5004;
LEK4: DRIFT, L:=0.5391;
LEK5: DRIFT, L:=0.4978-S0;
//    
LXF3: LINE = (LEK1,X1DHF3,LEK2,X2DHF3,LEK3,X3DHF3,LEK4,X4DHF3,LEK5);
LXF6: LINE = (SPTMF6, LDH);                           //Extraction septum
//
// Sublines
//
// temp for SEB work 
LL0:  LINE = (SPTMB6, COLLB6, LDHH,
              L057, DVCB7, L007, SVB7, L014, PUEVB7, L011, QVB7, L029, DHB7,
              L057, DHCB8, L007, SHB8, L014, PUEHB8, L012, QHB8, L031, DHB8);
// temp for SEB work
//
DHC1: LINE = (DHC1T,DHC1Z);
DHC2: LINE = (DHC2T,DHC2Z);
DHC4: LINE = (DHC4T,DHC4Z);
DHC5: LINE = (DHC5T,DHC5Z);
DHC7: LINE = (DHC7T,DHC7Z);
DHC8: LINE = (DHC8T,DHC8Z);
//
LC1:  LINE = (LJC1, DVCC1, L007, SVC1, L014, PUEVC1, L011, QVC1, L029, DHC1);
LC2:  LINE = (L057, DHCC2, L007, SHC2, L014, PUEHC2, L012, QHC2, L031, DHC2);
LC3:  LINE = (L057, DVCC3, L007, SVC3, L014, PUEVC3, L011, QVC3, LJC3      );
LC4:  LINE = (      DHCC4, L007, SHC4, L014, PUEHC4, L012, QHC4, L031, DHC4);   //7/26/91
//LC4:  LINE = (L057, HKC, L007, SHC4, L014, PUEHC4, L012, QHC4, L031, DHC4);
LC5:  LINE = (L057, DVCC5, L007, SVC5, L014, PUEVC5, L011, QVC5, L029, DHC5);
LC6:  LINE = (LIJF, DHCC6, L007, SHC6, L014, PUEHC6, L012, QHC6, L031, LDH);
LC7:  LINE = (LJC7, DVCC7, L007, SVC7, L014, PUEVC7, L011, QVC7, L029, DHC7);
LC8:  LINE = (L057, DHCC8, L007, SHC8, L014, PUEHC8, L012, QHC8, L031, DHC8);
//VKC:  LIST = (DVCC1, DVCC3, DVCC5, DVCC7);
//HKC:  LIST = (DHCC2, DHCC4, DHCC6, DHCC8);
//
DHD1: LINE = (DHD1T,DHD1Z);
DHD2: LINE = (DHD2T,DHD2Z);
//DHD4: LINE = (DHD4T,DHD4TK,DHD4Z);
DHD4: LINE = (DHD4T,DHD4Z);
DHD5: LINE = (DHD5T,DHD5Z);
DHD7: LINE = (DHD7T,DHD7Z);
//DHD8: LINE = (DHD8T,DHD8TK,DHD8Z);
DHD8: LINE = (DHD8T,DHD8Z);
//
LD1:  LINE = (LJD1, DVCD1, L007, SVD1, L014, PUEVD1, L011, QVD1, L029, DHD1);
LD2:  LINE = (L057, DHCD2, L007, SHD2, L014, PUEHD2, L012, QHD2, L031, DHD2);
//
LIPMu: LINE = (LDH1,IPMV,LDH2,IPMSK,LDH3,IPMH);
LD3u: LINE = (L057, DVCD3, L007, SVD3, L014, PUEVD3, L011, QVD3, L029,LIPMu);
//
LIPM: LINE = (LDH1,IPMV,LDH2,IPMSK,LDH3,IPMH, SPTMD3, LDH4);
LD3:  LINE = (L057, DVCD3, L007, SVD3, L014, PUEVD3, L011, QVD3, L029, LIPM);
//
LD3K: LINE = (SPTMD3k, LDH4);
//
LD3S: LINE = (LDH1,IPMV,LDH2,IPMSK,LDH3,IPMH, SPTMD3, LDH4);
LD3n: LINE = (L057, DVCD3, L007, SVD3, L014, PUEVD3, L011, QVD3, L029, LIPM);
LD4:  LINE = (L057, DHCD4, L007, SHD4, L014, PUEHD4, L012, QHD4, L031, DHD4) ;
LD5:  LINE = (L057, DVCD5, L007, SVD5, L014, PUEVD5, L011, QVD5, L029, DHD5);
//
LD6ts: LINE=(L057,DHCD6,L007,SHD6,L014,PUEHD6,L012,QHD6,L031);
LD6as: LINE=(SPTMD6,LDHH,LDHH,D6ds);
LD6: LINE=(L057,DHCD6,L007,SHD6,L014,PUEHD6,L012,QHD6,L031,SPTMD6,LDHH,LDHH,D6ds);
LD6toS: LINE =(L057,DHCD6,L007,SHD6,L014,PUEHD6,L012,QHD6,L031,SPTMD6);
LD6toBAF: LINE =(L057,DHCD6,L007,SHD6,L014,PUEHD6,L012,QHD6,L031,D6SEPTu,D6SEPTd);
//
LD7:  LINE = (L057, DVCD7, L007, SVD7, L014, PUEVD7, L011, QVD7, L029, DHD7);
LD8:  LINE = (L057, DHCD8, L007, SHD8, L014, PUEHD8, L012, QHD8, L031, DHD8);

//VKD:  LIST = (DVCD1, DVCD3, DVCD5, DVCD7);
//HKD:  LIST = (DHCD2, DHCD4, DHCD6, DHCD8);
//
// For SEB; D3 with septum kicker, through booster to D3
LDipm: LINE = (LD1, LD2, LD3u);
LDd3: LINE = (LD3K, LD4, LD5, LD6, LD7, LD8);
//
//DHE1: LINE = (DHE1T,DHE1TK,DHE1Z);
DHE1: LINE = (DHE1T,DHE1Z);
DHE2: LINE = (DHE2T,DHE2Z);
DHE4: LINE = (DHE4T,DHE4Z);
DHE5: LINE = (DHE5T,DHE5Z);
DHE7: LINE = (DHE7T,DHE7Z);
DHE8: LINE = (DHE8T,DHE8Z);
//
LE1:  LINE = (L057, DVCE1, L007, SVE1, L014, PUEVE1, L011, QVE1, L029, DHE1);
LE2:  LINE = (L057, DHCE2, L007, SHE2, L014, PUEHE2, L012, QHE2, L031, DHE2);
LE3:  LINE = (L057, DVCE3, L007, SVE3, L014, PUEVE3, L011, QVE3, L029, LDH);
LE4:  LINE = (L057, DHCE4, L007, SHE4, L014, PUEHE4, L012, QHE4, L031, DHE4); 
LE5:  LINE = (L057, DVCE5, L007, SVE5, L014, PUEVE5, L011, QVE5, L029, DHE5);
LE6:  LINE = (L057, DHCE6, L007, SHE6, L014, PUEHE6, L012, QHE6, L031, LDH);
LE7:  LINE = (L057, DVCE7, L007, SVE7, L014, PUEVE7, L011, QVE7, L029, DHE7);
LE8:  LINE = (L057, DHCE8, L007, SHE8, L014, PUEHE8, L012, QHE8, L031, DHE8);

//VKE:  LIST = (DVCE1, DVCE3, DVCE5, DVCE7);
//HKE:  LIST = (DHCE2, DHCE4, DHCE6, DHCE8);
//
DHF1: LINE = (DHF1T,DHF1Z);
DHF2: LINE = (DHF2T,DHF2Z);
DHF4: LINE = (DHF4T,DHF4Z);
DHF5: LINE = (DHF5T,DHF5Z);
DHF7: LINE = (DHF7T,DHF7Z);
DHF8: LINE = (DHF8T,DHF8Z);
//
LF1:  LINE = (L057, DVCF1, L007, SVF1, L014, PUEVF1, L011, QVF1, L029, DHF1);
LF2:  LINE = (L057, DHCF2, L007, SHF2, L014, PUEHF2, L012, QHF2, L031, DHF2);
LF3:  LINE = (L057, DVCF3, L007, SVF3, L014, PUEVF3, L011, QVF3, L029, LXF3);
LF4:  LINE = (L057, DHCF4, L007, SHF4, L014, PUEHF4, L012, QHF4, L031, DHF4);
LF5:  LINE = (L057, DVCF5, L007, SVF5, L014, PUEVF5, L011, QVF5, L029, DHF5);
LF6:  LINE = (L057, DHCF6, L007, SHF6, L014, PUEHF6, L012, QHF6, L031, LXF6);
LF7:  LINE = (L057, DVCF7, L007, SVF7, L014, PUEVF7, L011, QVF7, L029, DHF7);
LF8:  LINE = (L057, DHCF8, L007, SHF8, L014, PUEHF8, L012, QHF8, L031, DHF8);

//VKF:  LIST = (DVCF1, DVCF3, DVCF5, DVCF7);
//HKF:  LIST = (DHCF2, DHCF4, DHCF6, DHCF8);
//
DHA1: LINE = (DHA1T,DHA1Z);
DHA2: LINE = (DHA2T,DHA2Z);
DHA4: LINE = (DHA4T,DHA4Z);
DHA5: LINE = (DHA5T,DHA5Z);
DHA7: LINE = (DHA7T,DHA7Z);
DHA8: LINE = (DHA8T,DHA8Z);
//
LA1:  LINE = (L057, DVCA1, L007, SVA1, L014, PUEVA1, L011, QVA1, L029, DHA1);
LA2:  LINE = (L057, DHCA2, L007, SHA2, L014, PUEHA2, L012, QHA2, L031, DHA2);
LA3:  LINE = (L057, DVCA3, L007, SVA3, L014, PUEVA3, L011, QVA3, L029, RFA3);
LA4:  LINE = (L057, DHCA4, L007, SHA4, L014, PUEHA4, L012, QHA4, L031, DHA4) ;
LA5:  LINE = (L057, DVCA5, L007, SVA5, L014, PUEVA5, L011, QVA5, L029, DHA5);
LA6:  LINE = (L057, DHCA6, L007, SHA6, L014, PUEHA6, L012, QHA6, L031, LDH);
LA7:  LINE = (L057, DVCA7, L007, SVA7, L014, PUEVA7, L011, QVA7, L029, DHA7);
LA8:  LINE = (L057, DHCA8, L007, SHA8, L014, PUEHA8, L012, QHA8, L031, DHA8);

//VKA:  LIST = (DVCA1, DVCA3, DVCA5, DVCA7);
//HKA:  LIST = (DHCA2, DHCA4, DHCA6, DHCA8);
//
DHB1: LINE = (DHB1T,DHB1Z);
DHB2: LINE = (DHB2T,DHB2Z);
DHB4: LINE = (DHB4T,DHB4Z);
DHB5: LINE = (DHB5T,DHB5Z);
DHB7: LINE = (DHB7T,DHB7Z);
DHB8: LINE = (DHB8T,DHB8Z);
//
LB1:  LINE = (L057, DVCB1, L007, SVB1, L014, PUEVB1, L011, QVB1, L029, DHB1);
LB2:  LINE = (L057, DHCB2, L007, SHB2, L014, PUEHB2, L012, QHB2, L031, DHB2);
LB3:  LINE = (L057, DVCB3, L007, SVB3, L014, PUEVB3, L011, QVB3, L029, LDH);
LB4:  LINE = (L057, DHCB4, L007, SHB4, L014, PUEHB4, L012, QHB4, L031, DHB4); 
LB5:  LINE = (L057, DVCB5, L007, SVB5, L014, PUEVB5, L011, QVB5, L029, DHB5);
LB6:  LINE = (L057, DHCB6, L007, SHB6, L014, PUEHB6, L012, QHB6, L031, 
                                                   LDHH, SPTMB6, LDHH);
LB7:  LINE = (L057, DVCB7, L007, SVB7, L014, PUEVB7, L011, QVB7, L029, DHB7);
LB8:  LINE = (L057, DHCB8, L007, SHB8, L014, PUEHB8, L012, QHB8, L031, DHB8);

//VKB:  LIST = (DVCB1, DVCB3, DVCB5, DVCB7);
//HKB:  LIST = (DHCB2, DHCB4, DHCB6, DHCB8);
//
// temp for SEB---------------------------------
//                                              //
LLF:  LINE = (L057, DVCB1, L007, SVB1, L014, PUEVB1, L011, QVB1, L029, DHB1,
              L057, DHCB2, L007, SHB2, L014, PUEHB2, L012, QHB2, L031, DHB2,
              L057, DVCB3, L007, SVB3, L014, PUEVB3, L011, QVB3, L029, LDH,
              L057, DHCB4, L007, SHB4, L014, PUEHB4, L012, QHB4, L031, DHB4,
              L057, DVCB5, L007, SVB5, L014, PUEVB5, L011, QVB5, L029, DHB5,
              L057, DHCB6, L007, SHB6, L014, PUEHB6, L012, QHB6, L031, 
                                                                       LDHH);
//                                             //
// temp for SEB--------------------------------- 
//
// Superperiods and Machine
//
//SEB////SUPER: LINE = (L1, L2, L3, L4, L5, L6, L7, L8);
////SEB//L1: LIST = (LC1, LD1, LE1, LF1, LA1, LB1);
//SEB////L2: LIST = (LC2, LD2, LE2, LF2, LA2, LB2);
//SEB////L3: LIST = (LC3, LD3, LE3, LF3, LA3, LB3);
//SEB////L4: LIST = (LC4, LD4, LE4, LF4, LA4, LB4);
//SEB////L5: LIST = (LC5, LD5, LE5, LF5, LA5, LB5);
//SEB////L6: LIST = (LC6, LD6, LE6, LF6, LA6, LB6);
//SEB////L7: LIST = (LC7, LD7, LE7, LF7, LA7, LB7);
//SEB////L8: LIST = (LC8, LD8, LE8, LF8, LA8, LB8);
//
// temp for SEB, start @ B6 --------------------------------
//                                              //
//SUPER: LINE = (L1, L2, L3, L4, L5, L6, L7, L8);
//L1: LIST = (LC1, LD1, LE1, LF1, LA1);
//L2: LIST = (LC2, LD2, LE2, LF2, LA2);
//L3: LIST = (LC3, LD3, LE3, LF3, LA3);
//L4: LIST = (LC4, LD4, LE4, LF4, LA4);
//L5: LIST = (LC5, LD5, LE5, LF5, LA5);
//L6: LIST = (LC6, LD6, LE6, LF6, LA6);
//L7: LIST = (LC7, LD7, LE7, LF7, LA7);
//L8: LIST = (LC8, LD8, LE8, LF8, LA8);
//
// temp for SEB, start @ B6 --------------------------------
//                                              //
//L1: LIST = (LE1, LF1, LA1, LB1);
//L2: LIST = (LE2, LF2, LA2, LB2);
//L3: LIST = (LE3, LF3, LA3, LB3);
//L4: LIST = (LE4, LF4, LA4, LB4);
//L5: LIST = (LE5, LF5, LA5, LB5);
//L6: LIST = (LE6, LF6, LA6, LB6);
//L7: LIST = (LE7, LF7, LA7, LB7);
//L8: LIST = (LE8, LF8, LA8, LB8);
//SUPER: LINE = (L1, L2, L3, L4, L5, L6, L7, L8);
Asuper: LINE = (LA1, LA2, LA3, LA4, LA5, LA6, LA7, LA8);
Bsuper: LINE = (LB1, LB2, LB3, LB4, LB5, LB6, LB7, LB8);
Csuper: LINE = (LC1, LC2, LC3, LC4, LC5, LC6, LC7, LC8);
Dsuper: LINE = (LD1, LD2, LD3, LD4, LD5, LD6, LD7, LD8);
Esuper: LINE = (LE1, LE2, LE3, LE4, LE5, LE6, LE7, LE8);
Fsuper: LINE = (LF1, LF2, LF3, LF4, LF5, LF6, LF7, LF8);
//                                             //
// temp for SEB--------------------------------- 
//
//BOOSTER: LINE=( SUPER);
//BOOSTER: LINE=(LL0,5 * SUPER,LLF);
BOOSTER: LINE=(Dsuper, Esuper, Fsuper, Asuper, Bsuper, Csuper);
//B_D3: LINE=(LDd3, 3 * SUPER, LLF, LL0, Csuper, LDipm);
B_D3: LINE=(LDd3, Esuper, Fsuper, Asuper, Bsuper, Csuper, LDipm);
//B_D6: LINE=(LD6as,LD7,LD8,3*SUPER,LLF,LL0,Csuper,LDipm,LD3K,LD4,LD5,LD6ts);
B_D6: LINE=(LD6as,LD7,LD8,Esuper,Fsuper,Asuper,Bsuper,Csuper,LDipm,LD3K,LD4,LD5,LD6ts);
// 
// from D3 to D6 
D3toD6: LINE=(LD3K, LD4, LD5, LD6toS);
